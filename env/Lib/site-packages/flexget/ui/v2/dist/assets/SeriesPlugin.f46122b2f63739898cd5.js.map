{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/esm/ArrowBackIos.js","webpack:///./src/plugins/series/hooks/shows.ts","webpack:///./node_modules/@material-ui/icons/esm/Add.js","webpack:///./src/plugins/series/RemoveDialog.tsx","webpack:///./src/plugins/series/utils.ts","webpack:///./src/plugins/series/Shows/ShowCard.tsx","webpack:///./src/plugins/series/Shows/ShowList.tsx","webpack:///./src/plugins/series/types.ts","webpack:///./src/plugins/series/Shows/Header.tsx","webpack:///./src/plugins/series/Shows/AddShowDialog.tsx","webpack:///./src/plugins/series/Shows/index.tsx","webpack:///./src/plugins/series/hooks/episodes.ts","webpack:///./src/plugins/series/Episodes/Header.tsx","webpack:///./node_modules/@material-ui/core/esm/Collapse/Collapse.js","webpack:///./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","webpack:///./src/plugins/series/hooks/releases.ts","webpack:///./node_modules/@material-ui/icons/esm/GetApp.js","webpack:///./src/plugins/series/Episodes/Releases.tsx","webpack:///./src/plugins/series/Episodes/EpisodeCard.tsx","webpack:///./src/plugins/series/Episodes/EpisodeList.tsx","webpack:///./src/plugins/series/Episodes/index.tsx","webpack:///./src/plugins/series/Series.tsx","webpack:///./node_modules/@material-ui/icons/esm/ExpandMore.js","webpack:///./src/common/ExpandButton.tsx"],"names":["createElement","d","Constants","createSvgIcon","actions","shows","totalCount","action","GET_SHOWS","show","ADD_SHOW","id","REMOVE_SHOW","showReducer","state","act","type","payload","filter","ShowContainer","createContainer","useReducer","errorStyle","theme","css","palette","error","main","RemoveDialog","open","onClose","request","loading","name","handleSubmit","useCallback","e","preventDefault","ok","Dialog","fullWidth","maxWidth","onSubmit","DialogTitle","DialogContent","DialogContentText","message","DialogActions","Button","onClick","color","disabled","showToEntry","title","originalUrl","quality","seriesName","episodeToEntry","episode","identifier","seriesSeason","season","seriesEpisode","number","seriesId","heading","cardCss","actionArea","entryCard","cardActions","typography","pxToRem","spacing","ShowCard","onRemoveClick","url","useRouteMatch","Card","CardActionArea","component","Link","to","entry","beginEpisode","Typography","variant","latestEntity","latestRelease","CardActions","Tooltip","placement","IconButton","aria-label","Delete","SortByShow","ConfigState","SortByRelease","IdentifiedBy","ShowList","options","dispatch","useContainer","query","stringify","snakeCase","page","useFlexgetAPI","useEffect","resp","data","parseInt","headers","get","fn","useGetShows","useState","showId","setShowId","handleClose","undefined","Method","useRemoveShow","Grid","container","map","item","key","xs","md","lg","wrapper","input","sortByOptions","value","ShowName","label","LastDownloadDate","orderByOptions","Direction","Desc","Asc","configOptions","Configured","Unconfigured","All","Header","perPage","setFieldValue","useFormikContext","handleChangePerPage","event","target","handleChangePage","_","p","useDebounceFormikSubmit","cssString","SelectField","size","InputProps","className","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","onChangeRowsPerPage","AddShowDialog","Post","req","addShow","initialValues","values","resetForm","TextField","autoFocus","speedDialCss","ShowPage","useInjectPageTitle","useMergeState","order","sortBy","inConfig","setOptions","useOverlayState","isOpen","close","Provider","Fab","Add","episodes","GET_EPISODES","REMOVE_EPISODE","episodeReducer","REMOVE_EPISODES","EpisodeContainer","forwardRef","props","ref","children","classes","_props$collapsedHeigh","collapsedHeight","collapsedHeightProp","_props$component","Component","inProp","in","onEnter","onEntered","onEntering","onExit","onExiting","style","_props$timeout","timeout","standard","other","useTheme","timer","useRef","wrapperRef","autoTransitionDuration","concat","clearTimeout","current","Transition","node","isAppearing","height","wrapperHeight","clientHeight","transitionDuration","mode","duration","duration2","transitions","getAutoHeightDuration","addEndListener","next","setTimeout","childProps","entered","exited","hidden","minHeight","wrapperInner","muiSupportAuto","withStyles","overflow","transition","create","visibility","display","width","root","muiName","position","right","top","transform","releases","GET_RELEASES","release","UPDATE_RELEASE","UPDATE_RELEASES","REMOVE_RELEASE","REMOVE_RELEASES","releaseReducer","downloaded","ReleaseContainer","Releases","episodeId","FirstSeen","menuState","setMenuState","selectedRelease","anchorEl","isRemoveOpen","removeOpen","removeClose","handleMenuClose","handleMenuClick","currentTarget","useGetReleases","releaseId","useRemoveRelease","removeState","removeRelease","Put","useUpdateRelease","updateLoading","updateRelease","List","dense","ListItem","ListItemText","primary","secondary","edge","MoreVert","Menu","MenuItem","ListItemIcon","GetApp","EpisodeCard","expanded","toggle","removeReleases","useUpdateReleases","updateReleases","ExpandButton","mountOnEnter","EpisodeList","useGetEpisodes","setEpisodeId","useRemoveEpisode","EpisodesPage","useParams","push","useHistory","setShow","useGetShowDetail","icon","useMemo","ArrowBackIos","useSetAppBarIcon","Series","path","exact","Shows","Episodes","iconBase","rotate","iconCss","ExpandMore"],"mappings":"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","file":"SeriesPlugin.f46122b2f63739898cd5.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');","import { useReducer, useEffect, useCallback, useState } from 'react';\nimport { createContainer, useContainer } from 'unstated-next';\nimport { action } from 'utils/hooks/actions';\nimport { stringify } from 'qs';\nimport { snakeCase, Method } from 'utils/fetch';\nimport { useFlexgetAPI } from 'core/api';\nexport var Constants;\n(function (Constants) {\n    Constants[\"GET_SHOWS\"] = \"@flexget/series/GET_SHOWS\";\n    Constants[\"ADD_SHOW\"] = \"@flexget/series/ADD_SHOW\";\n    Constants[\"REMOVE_SHOW\"] = \"@flexget/series/REMOVE_SHOW\";\n})(Constants || (Constants = {}));\nexport const actions = {\n    getShows: (shows, totalCount) => action(Constants.GET_SHOWS, { shows, totalCount }),\n    addShow: (show) => action(Constants.ADD_SHOW, show),\n    removeShow: (id) => action(Constants.REMOVE_SHOW, id),\n};\nconst showReducer = (state, act) => {\n    switch (act.type) {\n        case Constants.GET_SHOWS:\n            return {\n                ...act.payload,\n            };\n        case Constants.ADD_SHOW:\n            return {\n                ...state,\n                shows: [act.payload, ...state.shows],\n                totalCount: state.totalCount + 1,\n            };\n        case Constants.REMOVE_SHOW:\n            return {\n                ...state,\n                totalCount: state.totalCount - 1,\n                shows: state.shows.filter(show => show.id !== act.payload),\n            };\n        default:\n            return state;\n    }\n};\nexport const ShowContainer = createContainer(() => {\n    return useReducer(showReducer, { shows: [], totalCount: 0 });\n});\nexport const useGetShows = (options) => {\n    const [, dispatch] = useContainer(ShowContainer);\n    // NOTE: Material-UI Table Pagination uses 0 based indexing for pages, so we add\n    // one here to account for that\n    const query = stringify(snakeCase({ ...options, page: options.page + 1 }));\n    const [state, request] = useFlexgetAPI(`/series?${query}`);\n    useEffect(() => {\n        const fn = async () => {\n            const resp = await request();\n            if (resp.ok) {\n                dispatch(actions.getShows(resp.data, parseInt(resp.headers.get('total-count') ?? '0', 10)));\n            }\n        };\n        fn();\n    }, [dispatch, request]);\n    return state;\n};\nexport const useAddShow = () => {\n    const [, dispatch] = useContainer(ShowContainer);\n    const [state, request] = useFlexgetAPI('/series', Method.Post);\n    const addShow = useCallback(async (req) => {\n        const resp = await request(req);\n        if (resp.ok) {\n            dispatch(actions.addShow(resp.data));\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, addShow];\n};\nexport const useRemoveShow = (showId) => {\n    const [, dispatch] = useContainer(ShowContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}`, Method.Delete);\n    const removeShow = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok && showId) {\n            dispatch(actions.removeShow(showId));\n        }\n        return resp;\n    }, [dispatch, request, showId]);\n    return [state, removeShow];\n};\nexport const useGetShowDetail = (showId) => {\n    const [state, request] = useFlexgetAPI(`/series/${showId}`);\n    const [show, setShow] = useState();\n    useEffect(() => {\n        const fn = async () => {\n            const resp = await request();\n            if (resp.ok) {\n                setShow(resp.data);\n            }\n        };\n        fn();\n    }, [request]);\n    return { ...state, show };\n};\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import React, { useCallback } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, } from '@material-ui/core';\nimport { css } from '@emotion/core';\nconst errorStyle = (theme) => css `\n  color: ${theme.palette.error.main};\n  text-align: center;\n`;\nconst RemoveDialog = ({ open = false, onClose, request, state: { error, loading }, name, }) => {\n    const handleSubmit = useCallback(async (e) => {\n        e.preventDefault();\n        const resp = await request();\n        if (resp.ok) {\n            onClose();\n        }\n    }, [onClose, request]);\n    return (<Dialog open={open} onClose={onClose} fullWidth maxWidth=\"xs\">\n      <form onSubmit={handleSubmit}>\n        <DialogTitle>Remove {name}</DialogTitle>\n        <DialogContent>\n          {error && <DialogContentText css={errorStyle}>{error.message}</DialogContentText>}\n          <DialogContentText>Are you sure you would like to remove this {name}?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} type=\"button\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\" disabled={loading}>\n            Remove\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>);\n};\nexport default RemoveDialog;\n","export const showToEntry = (show) => ({\n    title: show.name,\n    originalUrl: '',\n    quality: 'unknown',\n    seriesName: show.name,\n});\nexport const episodeToEntry = (show, episode) => ({\n    title: episode.identifier,\n    originalUrl: '',\n    quality: 'unknown',\n    seriesName: show.name,\n    seriesSeason: episode.season,\n    seriesEpisode: episode.number,\n    seriesId: episode.identifier,\n});\n","import React from 'react';\nimport { useRouteMatch } from 'react-router';\nimport { css } from '@emotion/core';\nimport { Card, CardActionArea, CardActions, IconButton, Tooltip, Typography, } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport Entry from 'core/entry/cards';\nimport { Link } from 'common/styles';\nimport { showToEntry } from '../utils';\nconst heading = css `\n  font-weight: 500;\n`;\nconst cardCss = css `\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  height: 100%;\n`;\nconst actionArea = css `\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nconst entryCard = css `\n  flex: 1;\n  width: 100%;\n`;\nconst cardActions = (theme) => css `\n  padding-left: ${theme.typography.pxToRem(theme.spacing(3))};\n  justify-content: space-between;\n`;\nconst ShowCard = ({ show, onRemoveClick }) => {\n    const { url } = useRouteMatch();\n    return (<Card css={cardCss}>\n      <CardActionArea css={actionArea} component={Link} to={`${url}/${show.id}`}>\n        <Entry entry={showToEntry(show)} css={entryCard}>\n          {!!show.beginEpisode && (<Typography variant=\"body2\" color=\"textSecondary\">\n              <Typography variant=\"body2\" css={heading} color=\"textPrimary\" component=\"span\">\n                Begin Episode:\n              </Typography>{' '}\n              {show.beginEpisode.identifier}\n            </Typography>)}\n          {!!show.latestEntity && (<Typography variant=\"body2\" color=\"textSecondary\">\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"span\" css={heading}>\n                Latest Release:\n              </Typography>{' '}\n              {show.latestEntity.identifier} ({show.latestEntity.latestRelease?.quality})\n            </Typography>)}\n        </Entry>\n      </CardActionArea>\n      <CardActions css={cardActions}>\n        <span />\n        <span>\n          <Tooltip title=\"Remove\" placement=\"top\">\n            <IconButton aria-label=\"remove\" onClick={onRemoveClick}>\n              <Delete />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </CardActions>\n    </Card>);\n};\nexport default ShowCard;\n","import React, { useState, useCallback } from 'react';\nimport { useContainer } from 'unstated-next';\nimport { Grid } from '@material-ui/core';\nimport RemoveDialog from '../RemoveDialog';\nimport { useGetShows, ShowContainer, useRemoveShow } from '../hooks/shows';\nimport ShowCard from './ShowCard';\nconst ShowList = ({ options }) => {\n    useGetShows(options);\n    const [{ shows }] = useContainer(ShowContainer);\n    const [showId, setShowId] = useState();\n    const handleClose = useCallback(() => setShowId(undefined), []);\n    const [state, request] = useRemoveShow(showId);\n    return (<>\n      <Grid container spacing={2}>\n        {shows.map(show => (<Grid item key={show.id} xs={12} md={6} lg={4}>\n            <ShowCard show={show} onRemoveClick={() => setShowId(showId)}/>\n          </Grid>))}\n      </Grid>\n      <RemoveDialog open={!!showId} onClose={handleClose} request={request} state={state} name=\"Show\"/>\n    </>);\n};\nexport default ShowList;\n","export var SortByShow;\n(function (SortByShow) {\n    SortByShow[\"ShowName\"] = \"show_name\";\n    SortByShow[\"LastDownloadDate\"] = \"last_download_date\";\n})(SortByShow || (SortByShow = {}));\nexport var ConfigState;\n(function (ConfigState) {\n    ConfigState[\"Configured\"] = \"configured\";\n    ConfigState[\"Unconfigured\"] = \"unconfigured\";\n    ConfigState[\"All\"] = \"all\";\n})(ConfigState || (ConfigState = {}));\nexport var SortByRelease;\n(function (SortByRelease) {\n    SortByRelease[\"FirstSeen\"] = \"first_seen\";\n    SortByRelease[\"Downoaded\"] = \"downloaded\";\n    SortByRelease[\"ProperCount\"] = \"proper_count\";\n    SortByRelease[\"Title\"] = \"title\";\n})(SortByRelease || (SortByRelease = {}));\nexport var IdentifiedBy;\n(function (IdentifiedBy) {\n    IdentifiedBy[\"Ep\"] = \"ep\";\n    IdentifiedBy[\"Sequence\"] = \"sequence\";\n    IdentifiedBy[\"Date\"] = \"date\";\n})(IdentifiedBy || (IdentifiedBy = {}));\n","import React from 'react';\nimport { TablePagination } from '@material-ui/core';\nimport { css, ClassNames } from '@emotion/core';\nimport SelectField from 'common/inputs/formik/SelectField';\nimport { useContainer } from 'unstated-next';\nimport { useFormikContext } from 'formik';\nimport { useDebounceFormikSubmit } from 'utils/hooks';\nimport { Direction } from 'utils/query';\nimport { SortByShow, ConfigState } from '../types';\nimport { ShowContainer } from '../hooks/shows';\nconst wrapper = (theme) => css `\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: ${theme.typography.pxToRem(theme.spacing(2))};\n  align-items: center;\n`;\nconst container = css `\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`;\nconst item = (theme) => css `\n  margin-left: ${theme.typography.pxToRem(theme.spacing(2))};\n  margin-right: ${theme.typography.pxToRem(theme.spacing(2))};\n`;\nconst input = css `\n  font-size: inherit;\n`;\nconst sortByOptions = [\n    {\n        value: SortByShow.ShowName,\n        label: 'Show Name',\n    },\n    {\n        value: SortByShow.LastDownloadDate,\n        label: 'Last Download Date',\n    },\n];\nconst orderByOptions = [\n    {\n        value: Direction.Desc,\n        label: 'Desc',\n    },\n    {\n        value: Direction.Asc,\n        label: 'Asc',\n    },\n];\nconst configOptions = [\n    {\n        value: ConfigState.Configured,\n        label: 'Configured',\n    },\n    {\n        value: ConfigState.Unconfigured,\n        label: 'Unconfigured',\n    },\n    {\n        value: ConfigState.All,\n        label: 'All Shows',\n    },\n];\nconst Header = ({ options: { page, perPage } }) => {\n    const [{ totalCount }] = useContainer(ShowContainer);\n    const { setFieldValue } = useFormikContext();\n    const handleChangePerPage = (event) => {\n        setFieldValue('perPage', parseInt(event.target.value, 10));\n        setFieldValue('page', 0);\n    };\n    const handleChangePage = (_, p) => {\n        setFieldValue('page', p);\n    };\n    useDebounceFormikSubmit();\n    return (<>\n      <ClassNames>\n        {({ css: cssString }) => (<div css={wrapper}>\n            <div css={container}/>\n            <div css={container}>\n              <SelectField label=\"Configured\" name=\"inConfig\" id=\"inConfig\" size=\"small\" InputProps={{ className: cssString(input) }} options={configOptions}/>\n              <SelectField css={item} label=\"Sort By\" name=\"sortBy\" id=\"sortBy\" size=\"small\" InputProps={{ className: cssString(input) }} options={sortByOptions}/>\n              <SelectField css={item} label=\"Order\" name=\"order\" id=\"order\" size=\"small\" InputProps={{ className: cssString(input) }} options={orderByOptions}/>\n\n              <TablePagination rowsPerPageOptions={[30, 60, 90]} count={totalCount} rowsPerPage={perPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangePerPage} component=\"div\"/>\n            </div>\n          </div>)}\n      </ClassNames>\n    </>);\n};\nexport default Header;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport TextField from 'common/inputs/formik/TextField';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, } from '@material-ui/core';\nimport { Form, Formik } from 'formik';\nimport { useAddShow } from '../hooks/shows';\nconst errorStyle = (theme) => css `\n  color: ${theme.palette.error.main};\n  text-align: center;\n`;\nconst AddShowDialog = ({ open = false, onClose }) => {\n    const initialValues = {\n        beginEpisode: '',\n        name: '',\n    };\n    const [{ loading, error }, addShow] = useAddShow();\n    return (<Dialog open={open} onClose={onClose} fullWidth maxWidth=\"xs\">\n      <DialogTitle>Add New Show</DialogTitle>\n\n      <Formik initialValues={initialValues} onSubmit={async (values, actions) => {\n        const resp = await addShow(values);\n        if (resp.ok) {\n            actions.resetForm();\n            onClose();\n        }\n    }}>\n        <Form>\n          <DialogContent>\n            {error && <DialogContentText css={errorStyle}>{error.message}</DialogContentText>}\n            <TextField id=\"name\" label=\"Name\" fullWidth name=\"name\" autoFocus/>\n            <TextField id=\"beginEpisode\" label=\"Begin Episode\" fullWidth name=\"beginEpisode\"/>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClose} type=\"button\">\n              Cancel\n            </Button>\n            <Button type=\"submit\" color=\"primary\" disabled={loading}>\n              Add\n            </Button>\n          </DialogActions>\n        </Form>\n      </Formik>\n    </Dialog>);\n};\nexport default AddShowDialog;\n","import React, { useCallback } from 'react';\nimport { css } from '@emotion/core';\nimport { Fab } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useInjectPageTitle } from 'core/layout/AppBar/hooks';\nimport { Direction } from 'utils/query';\nimport { useMergeState, useOverlayState } from 'utils/hooks';\nimport { Formik } from 'formik';\nimport { ShowContainer } from '../hooks/shows';\nimport ShowList from './ShowList';\nimport { SortByShow, ConfigState } from '../types';\nimport Header from './Header';\nimport AddShowDialog from './AddShowDialog';\nconst speedDialCss = (theme) => css `\n  position: absolute;\n  bottom: ${theme.typography.pxToRem(theme.spacing(2))};\n  right: ${theme.typography.pxToRem(theme.spacing(2))};\n`;\nconst ShowPage = () => {\n    useInjectPageTitle('Series');\n    const [options, setOptions] = useMergeState({\n        page: 0,\n        perPage: 30,\n        order: Direction.Desc,\n        sortBy: SortByShow.ShowName,\n        inConfig: ConfigState.Configured,\n    });\n    const handleSubmit = useCallback(values => setOptions(values), [setOptions]);\n    const [isOpen, { close, open }] = useOverlayState();\n    return (<ShowContainer.Provider>\n      <Formik initialValues={options} onSubmit={handleSubmit}>\n        <Header options={options}/>\n      </Formik>\n      <ShowList options={options}/>\n      <Fab aria-label=\"Add\" onClick={open} css={speedDialCss} color=\"primary\">\n        <Add />\n      </Fab>\n      <AddShowDialog open={isOpen} onClose={close}/>\n    </ShowContainer.Provider>);\n};\nexport default ShowPage;\n","import { useReducer, useEffect, useCallback } from 'react';\nimport { createContainer, useContainer } from 'unstated-next';\nimport { action } from 'utils/hooks/actions';\nimport { stringify } from 'qs';\nimport { snakeCase, Method } from 'utils/fetch';\nimport { useFlexgetAPI } from 'core/api';\nexport var Constants;\n(function (Constants) {\n    Constants[\"GET_EPISODES\"] = \"@flexget/series/GET_EPISODES\";\n    Constants[\"REMOVE_EPISODE\"] = \"@flexget/series/REMOVE_EPISODE\";\n    Constants[\"REMOVE_EPISODES\"] = \"@flexget/series/REMOVE_EPISODES\";\n})(Constants || (Constants = {}));\nexport const actions = {\n    getEpisodes: (episodes, totalCount) => action(Constants.GET_EPISODES, { episodes, totalCount }),\n    removeEpisode: (id) => action(Constants.REMOVE_EPISODE, id),\n    removeEpisodes: () => action(Constants.REMOVE_EPISODES),\n};\nconst episodeReducer = (state, act) => {\n    switch (act.type) {\n        case Constants.GET_EPISODES:\n            return {\n                ...act.payload,\n            };\n        case Constants.REMOVE_EPISODE:\n            return {\n                totalCount: state.totalCount - 1,\n                episodes: state.episodes.filter(episode => episode.id !== act.payload),\n            };\n        case Constants.REMOVE_EPISODES:\n            return {\n                totalCount: 0,\n                episodes: [],\n            };\n        default:\n            return state;\n    }\n};\nexport const EpisodeContainer = createContainer(() => {\n    return useReducer(episodeReducer, { episodes: [], totalCount: 0 });\n});\nexport const useGetEpisodes = (showId, options) => {\n    const [, dispatch] = useContainer(EpisodeContainer);\n    // NOTE: Material-UI Table Pagination uses 0 based indexing for pages, so we add\n    // one here to account for that\n    const query = stringify(snakeCase({ ...options, page: options.page + 1 }));\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes?${query}`);\n    useEffect(() => {\n        if (showId) {\n            const fn = async () => {\n                const resp = await request();\n                if (resp.ok) {\n                    dispatch(actions.getEpisodes(resp.data, parseInt(resp.headers.get('total-count') ?? '0', 10)));\n                }\n            };\n            fn();\n        }\n    }, [dispatch, request, showId]);\n    return state;\n};\nexport const useRemoveEpisode = (showId, episodeId) => {\n    const [, dispatch] = useContainer(EpisodeContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}`, Method.Delete);\n    const removeEpisode = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok && episodeId) {\n            dispatch(actions.removeEpisode(episodeId));\n        }\n        return resp;\n    }, [dispatch, episodeId, request]);\n    return [state, removeEpisode];\n};\nexport const useRemoveEpisodes = (showId) => {\n    const [, dispatch] = useContainer(EpisodeContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes`, Method.Delete);\n    const removeEpisodes = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok) {\n            dispatch(actions.removeEpisodes());\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, removeEpisodes];\n};\n","import React from 'react';\nimport { TablePagination } from '@material-ui/core';\nimport { css, ClassNames } from '@emotion/core';\nimport SelectField from 'common/inputs/formik/SelectField';\nimport { useContainer } from 'unstated-next';\nimport { useFormikContext } from 'formik';\nimport { useDebounceFormikSubmit } from 'utils/hooks';\nimport { Direction } from 'utils/query';\nimport { EpisodeContainer } from '../hooks/episodes';\nconst wrapper = (theme) => css `\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: ${theme.typography.pxToRem(theme.spacing(2))};\n  align-items: center;\n`;\nconst container = css `\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`;\nconst item = (theme) => css `\n  margin-left: ${theme.typography.pxToRem(theme.spacing(2))};\n  margin-right: ${theme.typography.pxToRem(theme.spacing(2))};\n`;\nconst input = css `\n  font-size: inherit;\n`;\nconst orderByOptions = [\n    {\n        value: Direction.Desc,\n        label: 'Desc',\n    },\n    {\n        value: Direction.Asc,\n        label: 'Asc',\n    },\n];\nconst Header = ({ options: { page, perPage } }) => {\n    const [{ totalCount }] = useContainer(EpisodeContainer);\n    const { setFieldValue } = useFormikContext();\n    const handleChangePerPage = (event) => {\n        setFieldValue('perPage', parseInt(event.target.value, 10));\n        setFieldValue('page', 0);\n    };\n    const handleChangePage = (_, p) => {\n        setFieldValue('page', p);\n    };\n    useDebounceFormikSubmit();\n    return (<ClassNames>\n      {({ css: cssString }) => (<div css={wrapper}>\n          <div css={container}/>\n          <div css={container}>\n            <SelectField css={item} label=\"Order\" name=\"order\" id=\"order\" size=\"small\" InputProps={{ className: cssString(input) }} options={orderByOptions}/>\n            <TablePagination rowsPerPageOptions={[30, 60, 90]} count={totalCount} rowsPerPage={perPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangePerPage} component=\"div\"/>\n          </div>\n        </div>)}\n    </ClassNames>);\n};\nexport default Header;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the container element. */\n    container: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the container element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$collapsedHeigh = props.collapsedHeight,\n      collapsedHeightProp = _props$collapsedHeigh === void 0 ? '0px' : _props$collapsedHeigh,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExiting\", \"style\", \"timeout\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedHeight = typeof collapsedHeightProp === 'number' ? \"\".concat(collapsedHeightProp, \"px\") : collapsedHeightProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    node.style.height = collapsedHeight;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleEntering = function handleEntering(node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  };\n\n  var handleEntered = function handleEntered(node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var handleExiting = function handleExiting(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedHeight;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  };\n\n  var addEndListener = function addEndListener(_, next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return React.createElement(Transition, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return React.createElement(Component, _extends({\n      className: clsx(classes.container, className, {\n        entered: classes.entered,\n        exited: !inProp && collapsedHeight === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedHeight\n      }, style),\n      ref: ref\n    }, childProps), React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import { useReducer, useEffect, useCallback } from 'react';\nimport { createContainer, useContainer } from 'unstated-next';\nimport { action } from 'utils/hooks/actions';\nimport { stringify } from 'qs';\nimport { snakeCase, Method } from 'utils/fetch';\nimport { useFlexgetAPI } from 'core/api';\nexport var Constants;\n(function (Constants) {\n    Constants[\"GET_RELEASES\"] = \"@flexget/series/GET_RELEASES\";\n    Constants[\"UPDATE_RELEASE\"] = \"@flexget/series/UPDATE_RELEASE\";\n    Constants[\"UPDATE_RELEASES\"] = \"@flexget/series/UPDATE_RELEASES\";\n    Constants[\"REMOVE_RELEASE\"] = \"@flexget/series/REMOVE_RELEASE\";\n    Constants[\"REMOVE_RELEASES\"] = \"@flexget/series/REMOVE_RELEASES\";\n})(Constants || (Constants = {}));\nexport const actions = {\n    getReleases: (releases, totalCount) => action(Constants.GET_RELEASES, { releases, totalCount }),\n    updateRelease: (release) => action(Constants.UPDATE_RELEASE, release),\n    updateReleases: () => action(Constants.UPDATE_RELEASES),\n    removeRelease: (id) => action(Constants.REMOVE_RELEASE, id),\n    removeReleases: () => action(Constants.REMOVE_RELEASES),\n};\nconst releaseReducer = (state, act) => {\n    switch (act.type) {\n        case Constants.GET_RELEASES:\n            return {\n                ...act.payload,\n            };\n        case Constants.UPDATE_RELEASE:\n            return {\n                ...state,\n                releases: state.releases.map(release => {\n                    if (release.id === act.payload.id) {\n                        return act.payload;\n                    }\n                    return release;\n                }),\n            };\n        case Constants.UPDATE_RELEASES:\n            return {\n                ...state,\n                releases: state.releases.map(release => ({\n                    ...release,\n                    downloaded: false,\n                })),\n            };\n        case Constants.REMOVE_RELEASE:\n            return {\n                totalCount: state.totalCount - 1,\n                releases: state.releases.filter(release => release.id !== act.payload),\n            };\n        case Constants.REMOVE_RELEASES:\n            return {\n                totalCount: 0,\n                releases: [],\n            };\n        default:\n            return state;\n    }\n};\nexport const ReleaseContainer = createContainer(() => {\n    return useReducer(releaseReducer, { releases: [], totalCount: 0 });\n});\nexport const useGetReleases = (showId, episodeId, options) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    // NOTE: Material-UI Table Pagination uses 0 based indexing for pages, so we add\n    // one here to account for that\n    const query = stringify(snakeCase({ ...options, page: options.page + 1 }));\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases?${query}`);\n    useEffect(() => {\n        const fn = async () => {\n            const resp = await request();\n            if (resp.ok) {\n                dispatch(actions.getReleases(resp.data, parseInt(resp.headers.get('total-count') ?? '0', 10)));\n            }\n        };\n        fn();\n    }, [dispatch, request]);\n    return state;\n};\nexport const useUpdateRelease = (showId, episodeId, releaseId) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases/${releaseId}`, Method.Put);\n    const updateRelease = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok) {\n            dispatch(actions.updateRelease(resp.data));\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, updateRelease];\n};\nexport const useUpdateReleases = (showId, episodeId) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases`, Method.Put);\n    const updateReleases = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok) {\n            dispatch(actions.updateReleases());\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, updateReleases];\n};\nexport const useRemoveRelease = (showId, episodeId, releaseId) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases/${releaseId}`, Method.Delete);\n    const removeRelease = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok && releaseId) {\n            dispatch(actions.removeRelease(releaseId));\n        }\n        return resp;\n    }, [dispatch, releaseId, request]);\n    return [state, removeRelease];\n};\nexport const useRemoveReleases = (showId, episodeId) => {\n    const [, dispatch] = useContainer(ReleaseContainer);\n    const [state, request] = useFlexgetAPI(`/series/${showId}/episodes/${episodeId}/releases`, Method.Delete);\n    const removeReleases = useCallback(async () => {\n        const resp = await request();\n        if (resp.ok) {\n            dispatch(actions.removeReleases());\n        }\n        return resp;\n    }, [dispatch, request]);\n    return [state, removeReleases];\n};\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');","import React, { useState, useCallback } from 'react';\nimport { useContainer } from 'unstated-next';\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Menu, MenuItem, ListItemIcon, } from '@material-ui/core';\nimport { useMergeState, useOverlayState } from 'utils/hooks';\nimport { Direction } from 'utils/query';\nimport { GetApp, Delete, MoreVert } from '@material-ui/icons';\nimport RemoveDialog from 'plugins/series/RemoveDialog';\nimport { ReleaseContainer, useGetReleases, useRemoveRelease, useUpdateRelease, } from '../hooks/releases';\nimport { SortByRelease } from '../types';\nconst Releases = ({ showId, episodeId }) => {\n    const [{ releases }] = useContainer(ReleaseContainer);\n    const [options] = useMergeState({\n        page: 0,\n        perPage: 50,\n        order: Direction.Desc,\n        sortBy: SortByRelease.FirstSeen,\n    });\n    const [menuState, setMenuState] = useState();\n    const { release: selectedRelease, anchorEl } = menuState ?? {};\n    const [isRemoveOpen, { open: removeOpen, close: removeClose }] = useOverlayState();\n    const handleMenuClose = useCallback(() => setMenuState(undefined), []);\n    const handleMenuClick = useCallback((release, event) => setMenuState({\n        anchorEl: event.currentTarget,\n        release,\n    }), []);\n    useGetReleases(showId, episodeId, options);\n    const [removeState, removeRelease] = useRemoveRelease(showId, episodeId, selectedRelease?.id);\n    const [{ loading: updateLoading }, updateRelease] = useUpdateRelease(showId, episodeId, selectedRelease?.id);\n    return (<List dense>\n      {releases.map(release => (<ListItem key={release.id}>\n          <ListItemText primary={release.title} secondary={release.quality}/>\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" onClick={e => handleMenuClick(release, e)} aria-label=\"View More\">\n              <MoreVert />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>))}\n      <Menu anchorEl={anchorEl} open={!!anchorEl} onClose={handleMenuClose}>\n        <MenuItem onClick={updateRelease} disabled={updateLoading || !selectedRelease?.downloaded}>\n          <ListItemIcon>\n            <GetApp />\n          </ListItemIcon>\n          Reset Release\n        </MenuItem>\n        <MenuItem onClick={removeOpen}>\n          <ListItemIcon>\n            <Delete />\n          </ListItemIcon>\n          Delete Release\n        </MenuItem>\n      </Menu>\n      <RemoveDialog open={isRemoveOpen} onClose={removeClose} state={removeState} request={removeRelease} name=\"Release\"/>\n    </List>);\n};\nexport default Releases;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport { Card, CardActions, Collapse, Button } from '@material-ui/core';\nimport Entry from 'core/entry/cards';\nimport ExpandButton from 'common/ExpandButton';\nimport { useOverlayState } from 'utils/hooks';\nimport RemoveDialog from 'plugins/series/RemoveDialog';\nimport Releases from './Releases';\nimport { episodeToEntry } from '../utils';\nimport { useUpdateReleases, useRemoveReleases } from '../hooks/releases';\nconst cardCss = css `\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  height: 100%;\n`;\nconst entryCard = css `\n  flex: 1;\n  width: 100%;\n`;\nconst cardActions = (theme) => css `\n  padding-left: ${theme.typography.pxToRem(theme.spacing(3))};\n  justify-content: space-between;\n`;\nconst EpisodeCard = ({ show, episode, onRemoveClick }) => {\n    const [expanded, { toggle }] = useOverlayState();\n    const [isRemoveOpen, { open: removeOpen, close: removeClose }] = useOverlayState();\n    const [removeState, removeReleases] = useRemoveReleases(show.id, episode.id);\n    const [{ loading: updateLoading }, updateReleases] = useUpdateReleases(show.id, episode.id);\n    return (<Card css={cardCss}>\n      <Entry entry={episodeToEntry(show, episode)} css={entryCard}/>\n      <CardActions css={cardActions}>\n        <span>\n          <Button onClick={removeOpen} color=\"primary\" size=\"small\">\n            Delete Releases\n          </Button>\n          <Button onClick={updateReleases} disabled={updateLoading} size=\"small\" color=\"primary\">\n            Reset Releases\n          </Button>\n        </span>\n        <span>\n          <Button onClick={onRemoveClick} color=\"primary\" size=\"small\">\n            Delete Episode\n          </Button>\n          <ExpandButton open={expanded} onClick={toggle}/>\n        </span>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" mountOnEnter>\n        <Releases showId={show.id} episodeId={episode.id}/>\n      </Collapse>\n      <RemoveDialog open={isRemoveOpen} onClose={removeClose} state={removeState} request={removeReleases} name=\"Releases\"/>\n    </Card>);\n};\nexport default EpisodeCard;\n","import React, { useState, useCallback } from 'react';\nimport { useContainer } from 'unstated-next';\nimport { Grid } from '@material-ui/core';\nimport RemoveDialog from '../RemoveDialog';\nimport { EpisodeContainer, useGetEpisodes, useRemoveEpisode } from '../hooks/episodes';\nimport EpisodeCard from './EpisodeCard';\nimport { ReleaseContainer } from '../hooks/releases';\nconst EpisodeList = ({ show, options }) => {\n    useGetEpisodes(show?.id, options);\n    const [{ episodes }] = useContainer(EpisodeContainer);\n    const [episodeId, setEpisodeId] = useState();\n    const handleClose = useCallback(() => setEpisodeId(undefined), []);\n    const [state, request] = useRemoveEpisode(show?.id, episodeId);\n    if (!show) {\n        return null;\n    }\n    return (<>\n      <Grid container spacing={2}>\n        {episodes.map(episode => (<Grid item key={episode.id} xs={12} md={6} lg={4}>\n            <ReleaseContainer.Provider>\n              <EpisodeCard show={show} episode={episode} onRemoveClick={() => setEpisodeId(episode.id)}/>\n            </ReleaseContainer.Provider>\n          </Grid>))}\n      </Grid>\n      <RemoveDialog open={!!episodeId} onClose={handleClose} request={request} state={state} name=\"Episode\"/>\n    </>);\n};\nexport default EpisodeList;\n","import React, { useCallback, useMemo } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { Formik } from 'formik';\nimport { useInjectPageTitle, useSetAppBarIcon } from 'core/layout/AppBar/hooks';\nimport { Direction } from 'utils/query';\nimport { useMergeState } from 'utils/hooks';\nimport { ArrowBackIos } from '@material-ui/icons';\nimport { EpisodeContainer } from '../hooks/episodes';\nimport Header from './Header';\nimport EpisodeList from './EpisodeList';\nimport { useGetShowDetail } from '../hooks/shows';\nconst EpisodesPage = () => {\n    const showId = parseInt(useParams().showId, 10);\n    const { push } = useHistory();\n    const { show } = useGetShowDetail(showId);\n    const title = show ? `${show.name} - Episodes` : 'Episodes';\n    const onClick = useCallback(() => {\n        push('/series');\n    }, [push]);\n    const icon = useMemo(() => ({\n        Component: ArrowBackIos,\n        onClick,\n        label: 'go back',\n    }), [onClick]);\n    useInjectPageTitle(title);\n    useSetAppBarIcon(icon);\n    const [options, setOptions] = useMergeState({\n        page: 0,\n        perPage: 30,\n        order: Direction.Desc,\n    });\n    const handleSubmit = useCallback(values => setOptions(values), [setOptions]);\n    return (<EpisodeContainer.Provider>\n      <Formik initialValues={options} onSubmit={handleSubmit}>\n        <Header options={options}/>\n      </Formik>\n      <EpisodeList show={show} options={options}/>\n    </EpisodeContainer.Provider>);\n};\nexport default EpisodesPage;\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch, useRouteMatch } from 'react-router';\nimport Shows from './Shows';\nimport Episodes from './Episodes';\nconst Series = () => {\n    const { path } = useRouteMatch();\n    return (<Switch>\n      <Route exact path={path} component={Shows}/>\n      <Route exact path={`${path}/:showId`} component={Episodes}/>\n    </Switch>);\n};\nexport default hot(Series);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import React, { useCallback, forwardRef } from 'react';\nimport { css } from '@emotion/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nconst iconBase = (theme) => css `\n  transition: ${theme.transitions.create(['transform'])};\n`;\nconst rotate = css `\n  transform: rotate(180deg);\n`;\nconst ExpandButton = forwardRef(({ open, ...props }, ref) => {\n    const iconCss = useCallback((theme) => [iconBase(theme), open && rotate], [open]);\n    return (<IconButton {...props} css={iconCss} ref={ref}>\n      <ExpandMore />\n    </IconButton>);\n});\nexport default ExpandButton;\n"],"sourceRoot":""}